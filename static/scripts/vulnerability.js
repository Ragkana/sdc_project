//----------------------------------------------------------------------------------------------//
//--------------------------------------------- Tab --------------------------------------------//
//----------------------------------------------------------------------------------------------//
$(document).ready(function () {
    $("#myTab a").click(function (e) {
        e.preventDefault();
        $(this).tab("show");
    });
});

//---------* Make the map avaliable in each tab *---------//
var camTab = document.getElementById('cambodia');
var observer1 = new MutationObserver(function () {
    if (camTab.style.display != 'none') {
        KHM_PopMap.invalidateSize();
        KHM_MPIMap.invalidateSize();
    }
});
observer1.observe(camTab, { attributes: true });

var laoTab = document.getElementById('laos');
var observer2 = new MutationObserver(function () {
    if (laoTab.style.display != 'none') {
        LAO_PopMap.invalidateSize();
        LAO_MPIMap.invalidateSize();
    }
});
observer2.observe(laoTab, { attributes: true });

var myaTab = document.getElementById('myanmar');
var observer3 = new MutationObserver(function () {
    if (myaTab.style.display != 'none') {
        //MYA_MapData.invalidateSize();
    }
});
observer3.observe(myaTab, { attributes: true });

//----------------------------------------------------------------------------------------------//
//--------------------------------------------- Map --------------------------------------------//
//----------------------------------------------------------------------------------------------//

function changePOP(value) {
    if (value == 'population_size') {
        return 'Population size'
    }
    if (value == 'number_of_mpi') {
        return 'Number of MPI poor'
    }
}
function changeMPI(value) {
    if (value == 'mpi') {
        return 'MPI'
    }
    if (value == 'population_in_mpi') {
        return 'Population in MPI'
    }
    if (value == 'intensity_of_deprivation') {
        return 'Intensity of deprivation among the poor'
    }
    if (value == 'vulnerable_to_poverty') {
        return 'Vulnerable to poverty'
    }
    if (value == 'in_severe_poverty') {
        return 'In severe poverty'
    }
}
function scaleChangeMPI(value) {
    if (value == 'mpi') {
        return ''
    }
    if (value == 'intensity_of_deprivation') {
        return ' (Average % of weighted deprivations)'
    }
    else {
        return ' (% Population)'
    }
}

// Destroy the old map and create the new one.
function destroyExistingMap(map) {
    if (map != undefined || map != null) {
        map.remove();
    }
}

// Assigning color for selected parameter class
function getColor(param) {
    return param == undefined ? '#fff' :
        param > 80 ? '#00022B' :
            param > 60 ? '#010E54' :
                param > 40 ? '#0754B0' :
                    param > 20 ? '#4FA5D8' :
                        '#DAEAF7';
}

// Map tile selection Function 
function getMapTile(mt) {
    if (mt == 'satellite') {
        return 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}';
    }
    if (mt == 'terrain') {
        return 'http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}';
    }
    if (mt == 'base') {
        return 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';
    }
}

//-----------------------------------------------------------------------------------------------------//
//--------------------------------------- Cambodia leaflet Map ----------------------------------------//
//----------------------------------------------------------------------------------------------------//
// ------- Cambodis Project Marker ------- //
function KHM_createMarker(arr) {
    var Group = L.layerGroup([]);
    for (var p in KHM_project) {
        var obj = KHM_project[p];

        for (var ind = 0; ind < arr.length; ind++) {
            if (obj.Project == arr[ind]) {
                var khm_loc = L.marker(obj.location, { icon: markerColor(ind) }).bindPopup(obj.Project);
                khm_loc.addTo(Group);
            }
        }

    }
    return Group;
}

// Population
var KHM_PopMap;

function KHM_POP_MapChart(mdata, arr) {
    destroyExistingMap(KHM_PopMap);
    // Retrieve Map data
    var KHM_map = mdata.pop_map_data;

    KHM_PopMap = L.map('hc_map01_container', {
        zoomControl: false,
        minZoom: 3,     // Max Zoom out
        maxZoom: 12,    // Max Zoom in
        attributionControl: false, // Remove leaflet logo
        scrollWheelZoom: false, // You can't get the correct screenshot If allow to use scroll.
        preferCanvas: true
    }).setView([12.562108, 104.888535], 7);
    if (KHM_POP_MapTile == 'base_w') {
        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png').addTo(KHM_PopMap);
    }
    else {
        L.tileLayer(getMapTile(KHM_POP_MapTile), {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        }).addTo(KHM_PopMap);
    }

    // Add Zoom button
    L.control.zoom({
        position: 'topleft'
    }).addTo(KHM_PopMap);

    function style(feature) {
        return {
            fillColor: getColor(feature.properties.percentage),
            fillOpacity: 0.7,
            weight: 2,
            opacity: 1,
            color: '#2F96B2',
            dashArray: '3'
        };
    }

    // Add interaction
    function highlightFeature(e) {
        var layer = e.target;
        // Don't show highlightFeature function if there is no data.
        if (layer.feature.properties.value !== undefined) {
            layer.setStyle({
                weight: 5,
                color: '#2F96B2',
                dashArray: '',
                fillOpacity: 0.7
            });

            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                layer.bringToFront();
            }
            // Add Info popup when mouseover
            layer.bindPopup('<b>' + changePOP(mdata.pop_select) + '</b><br>' + layer.feature.properties.Province + ' : ' + layer.feature.properties.value + ' Thousands').openPopup();
            layer.on('mouseout', function () {
                this.closePopup();
            });


        }
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
    }

    // Zoom
    function zoomToFeature(e) {
        KHM_PopMap.fitBounds(e.target.getBounds());
    }


    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    geojson = L.geoJson(KHM_map, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(KHM_PopMap);

    // Add SDC Project location
    var KHM_marker = KHM_createMarker(arr);
    KHM_marker.addTo(KHM_PopMap);
}


// MPI map chart
var KHM_MPIMap;

function KHM_MPI_MapChart(mdata, arr) {
    destroyExistingMap(KHM_MPIMap);
    // Retrieve Map data
    var KHM_map = mdata.mpi_map_data;

    KHM_MPIMap = L.map('hc_map02_container', {
        zoomControl: false,
        minZoom: 3,     // Max Zoom out
        maxZoom: 12,    // Max Zoom in
        attributionControl: false, // Remove leaflet logo
        scrollWheelZoom: false, // You can't get the correct screenshot If allow to use scroll.
        preferCanvas: true
    }).setView([12.562108, 104.888535], 7);
    if (KHM_MPI_MapTile == 'base_w') {
        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png').addTo(KHM_MPIMap);
    }
    else {
        L.tileLayer(getMapTile(KHM_MPI_MapTile), {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        }).addTo(KHM_MPIMap);
    }

    // Add Zoom button
    L.control.zoom({
        position: 'topleft'
    }).addTo(KHM_MPIMap);

    function style(feature) {
        return {
            fillColor: getColor(feature.properties.percentage),
            fillOpacity: 0.7,
            weight: 2,
            opacity: 1,
            color: '#2F96B2',
            dashArray: '3'
        };
    }

    // Add interaction
    function highlightFeature(e) {
        var layer = e.target;
        // Don't show highlightFeature function if there is no data.
        if (layer.feature.properties.value !== undefined) {
            layer.setStyle({
                weight: 5,
                color: '#2F96B2',
                dashArray: '',
                fillOpacity: 0.7
            });

            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                layer.bringToFront();
            }
            // Add Info popup when mouseover
            layer.bindPopup('<b>' + changeMPI(mdata.mpi_select) + '</b><br>' + layer.feature.properties.Province + ' : ' + layer.feature.properties.value + ' ' + scaleChangeMPI(mdata.mpi_select)).openPopup();
            layer.on('mouseout', function () {
                this.closePopup();
            });


        }
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
    }

    // Zoom
    function zoomToFeature(e) {
        KHM_MPIMap.fitBounds(e.target.getBounds());
    }


    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    geojson = L.geoJson(KHM_map, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(KHM_MPIMap);

    // Add SDC Project location
    var KHM_marker = KHM_createMarker(arr);
    KHM_marker.addTo(KHM_MPIMap);
}


//----------------------------------------------------------------------------------------------------------//
//------------------------------------------- Laos leaflet Map ---------------------------------------------//
//----------------------------------------------------------------------------------------------------------//
// ------- Laos Project Marker ------- //
function LAO_createMarker(arr) {
    var Group = L.layerGroup([]);
    for (var p in LAO_project) {
        var obj = LAO_project[p];

        for (var ind = 0; ind < arr.length; ind++) {
            if (obj.Project == arr[ind]) {
                var lao_loc = L.marker(obj.location, { icon: markerColor(ind) }).bindPopup(obj.Project);
                lao_loc.addTo(Group);
            }
        }

    }
    return Group;
}

// Population
// Population
var LAO_PopMap;

function LAO_POP_MapChart(mdata,arr) {
    destroyExistingMap(LAO_PopMap);
    // Retrieve Map data
    var LAO_map = mdata.pop_map_data;

    LAO_PopMap = L.map('hc_map03_container', {
        zoomControl: false,
        minZoom: 3,     // Max Zoom out
        maxZoom: 12,    // Max Zoom in
        attributionControl: false, // Remove leaflet logo
        scrollWheelZoom: false, // You can't get the correct screenshot If allow to use scroll.
        preferCanvas: true
    }).setView([17.6384, 105.2195], 6);
    if (LAO_POP_MapTile == 'base_w') {
        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png').addTo(LAO_PopMap);
    }
    else {
        L.tileLayer(getMapTile(LAO_POP_MapTile), {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        }).addTo(LAO_PopMap);
    }

    // Add Zoom button
    L.control.zoom({
        position: 'topleft'
    }).addTo(LAO_PopMap);

    function style(feature) {
        return {
            fillColor: getColor(feature.properties.percentage),
            fillOpacity: 0.7,
            weight: 2,
            opacity: 1,
            color: '#2F96B2',
            dashArray: '3'
        };
    }

    // Add interaction
    function highlightFeature(e) {
        var layer = e.target;
        // Don't show highlightFeature function if there is no data.
        if (layer.feature.properties.value !== undefined) {
            layer.setStyle({
                weight: 5,
                color: '#2F96B2',
                dashArray: '',
                fillOpacity: 0.7
            });

            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                layer.bringToFront();
            }
            // Add Info popup when mouseover
            layer.bindPopup('<b>' + changePOP(mdata.pop_select) + '</b><br>' + layer.feature.properties.Province + ' : ' + layer.feature.properties.value + ' Thousands').openPopup();
            layer.on('mouseout', function () {
                this.closePopup();
            });


        }
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
    }

    // Zoom
    function zoomToFeature(e) {
        LAO_PopMap.fitBounds(e.target.getBounds());
    }


    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    geojson = L.geoJson(LAO_map, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(LAO_PopMap);

    // Add SDC Project location
    var LAO_marker = LAO_createMarker(arr);
    LAO_marker.addTo(LAO_PopMap);
}

// MPI map chart
var LAO_MPIMap;

function LAO_MPI_MapChart(mdata, arr) {
    destroyExistingMap(LAO_MPIMap);
    // Retrieve Map data
    var LAO_map = mdata.mpi_map_data;

    LAO_MPIMap = L.map('hc_map04_container', {
        zoomControl: false,
        minZoom: 3,     // Max Zoom out
        maxZoom: 12,    // Max Zoom in
        attributionControl: false, // Remove leaflet logo
        scrollWheelZoom: false, // You can't get the correct screenshot If allow to use scroll.
        preferCanvas: true
    }).setView([17.6384, 105.2195], 6);
    if (LAO_MPI_MapTile == 'base_w') {
        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png').addTo(LAO_MPIMap);
    }
    else {
        L.tileLayer(getMapTile(LAO_MPI_MapTile), {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        }).addTo(LAO_MPIMap);
    }

    // Add Zoom button
    L.control.zoom({
        position: 'topleft'
    }).addTo(LAO_MPIMap);

    function style(feature) {
        return {
            fillColor: getColor(feature.properties.percentage),
            fillOpacity: 0.7,
            weight: 2,
            opacity: 1,
            color: '#2F96B2',
            dashArray: '3'
        };
    }

    // Add interaction
    function highlightFeature(e) {
        var layer = e.target;
        // Don't show highlightFeature function if there is no data.
        if (layer.feature.properties.value !== undefined) {
            layer.setStyle({
                weight: 5,
                color: '#2F96B2',
                dashArray: '',
                fillOpacity: 0.7
            });

            if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                layer.bringToFront();
            }
            // Add Info popup when mouseover
            layer.bindPopup('<b>' + changeMPI(mdata.mpi_select) + '</b><br>' + layer.feature.properties.Province + ' : ' + layer.feature.properties.value + ' ' + scaleChangeMPI(mdata.mpi_select)).openPopup();
            layer.on('mouseout', function () {
                this.closePopup();
            });


        }
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
    }

    // Zoom
    function zoomToFeature(e) {
        LAO_MPIMap.fitBounds(e.target.getBounds());
    }


    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    geojson = L.geoJson(LAO_map, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(LAO_MPIMap);

    // Add SDC Project location
    var LAO_marker = LAO_createMarker(arr);
    LAO_marker.addTo(LAO_MPIMap);
}
// --------------------------------------- ** Myanmar ** --------------------------------------- //

//-------------------------------------------------------------------------------------------------------------------------//
//--------------------------------------- Location marker function for leaflet Map ----------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------//
// ------- Location marker image function ------- //
const pinkDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/pink_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const greenDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/green_dot.png',

    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const purpleDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/purple_dot.png',

    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const orangeDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/orange_dot.png',

    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const yellowDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/yellow_dot.png',

    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const darkpurpleDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/darkpurple_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const blueDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/blue_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const lightblueDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/lightblue_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const lightgreenDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/lightgreen_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const lightpinkDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/lightpink_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

const whiteDot = new L.icon({
    iconUrl: '/static/images/Project_dot_on_map/white_dot.png',
    iconSize: [14, 14], // size of the icon
    // remember that iconAnchor must always relate to iconSize by [x=x/2,y=y]
    iconAnchor: [7, 14], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -10] // point from which the popup should open relative to the iconAnchor
});

// ------- Project Marker color ------- //
function markerColor(val) {
    if (val == 0) {
        return pinkDot;
    }
    if (val == 1) {
        return greenDot;
    }
    if (val == 2) {
        return purpleDot;
    }
    if (val == 3) {
        return orangeDot;
    }
    if (val == 4) {
        return blueDot;
    }
    if (val == 5) {
        return yellowDot;
    }
    if (val == 6) {
        return lightgreenDot;
    }
    if (val == 7) {
        return darkpurpleDot;
    }
    if (val == 8) {
        return lightblueDot;
    }
    if (val == 9) {
        return whiteDot;
    }
    else {
        return lightpinkDot;
    }
}

// ------- Cambodia SDC project Marker color notation in box ------- //
function KHM_MakerNoteBox_POP(arr) {
    var marker_arr = [];
    for (var i = 0; i < arr.length; i++) {
        if (i == 0) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/pink_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 1) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/green_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 2) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/purple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 3) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/orange_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 4) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/blue_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 5) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/yellow_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 6) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightgreen_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 7) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/darkpurple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 8) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightblue_dot.png' style='width:1rem'> " + arr[i]);
        }
        else if (i >= 9) {
            marker_arr.push("<img src='/static/images/Project_dot_on_map/lightpink_dot.png' style='width:1rem'> " + arr[i]);
        }

    }
    return document.getElementById('KHM_POP_project_show').innerHTML = marker_arr;
}

function KHM_MakerNoteBox_MPI(arr) {
    var marker_arr = [];
    for (var i = 0; i < arr.length; i++) {
        if (i == 0) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/pink_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 1) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/green_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 2) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/purple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 3) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/orange_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 4) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/blue_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 5) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/yellow_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 6) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightgreen_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 7) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/darkpurple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 8) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightblue_dot.png' style='width:1rem'> " + arr[i]);
        }
        else if (i >= 9) {
            marker_arr.push("<img src='/static/images/Project_dot_on_map/lightpink_dot.png' style='width:1rem'> " + arr[i]);
        }

    }
    return document.getElementById('KHM_MPI_project_show').innerHTML = marker_arr;
}

// ------- Laos SDC project Marker color notation in box ------- //
function LAO_MakerNoteBox_POP(arr) {
    var marker_arr = [];
    for (var i = 0; i < arr.length; i++) {
        if (i == 0) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/pink_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 1) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/green_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 2) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/purple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 3) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/orange_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 4) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/blue_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 5) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/yellow_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 6) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightgreen_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 7) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/darkpurple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 8) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightblue_dot.png' style='width:1rem'> " + arr[i]);
        }
        else if (i >= 9) {
            marker_arr.push("<img src='/static/images/Project_dot_on_map/lightpink_dot.png' style='width:1rem'> " + arr[i]);
        }

    }
    return document.getElementById('LAO_POP_project_show').innerHTML = marker_arr;
}

function LAO_MakerNoteBox_MPI(arr) {
    var marker_arr = [];
    for (var i = 0; i < arr.length; i++) {
        if (i == 0) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/pink_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 1) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/green_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 2) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/purple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 3) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/orange_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 4) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/blue_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 5) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/yellow_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 6) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightgreen_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 7) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/darkpurple_dot.png' style='width:1rem'> " + arr[i]);
        }
        if (i == 8) {
            marker_arr.push(" <img src='/static/images/Project_dot_on_map/lightblue_dot.png' style='width:1rem'> " + arr[i]);
        }
        else if (i >= 9) {
            marker_arr.push("<img src='/static/images/Project_dot_on_map/lightpink_dot.png' style='width:1rem'> " + arr[i]);
        }

    }
    return document.getElementById('LAO_MPI_project_show').innerHTML = marker_arr;
}


//--------------------------------------------------------------------------------------------------------------------------//
//----------------------------------------- GeoJSON generate and download function -----------------------------------------//
//-------------------------------------------------------------------------------------------------------------------------//

function download(content, fileName, contentType) {
    var a = document.createElement("a");
    var file = new Blob([content], { type: contentType });
    a.href = URL.createObjectURL(file);
    a.download = fileName;
    a.click();
}

//--------* Cambodia *--------//
function KHM_onDownload_JSON(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "KHM_" + data.pop_select + ".geojson", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "KHM_" + data.mpi_select + ".geojson", "text/plain");
    }

}

function KHM_onDownload_TIFF(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "KHM_" + data.pop_select + ".tiff", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "KHM_" + data.mpi_select + ".tiff", "text/plain");
    }
}

//--------* Laos *--------//
function LAO_onDownload_JSON(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "LAO_" + data.pop_select + ".geojson", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "LAO_" + data.mpi_select + ".geojson", "text/plain");
    }

}

function LAO_onDownload_TIFF(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "LAO_" + data.pop_select + ".tiff", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "LAO_" + data.mpi_select + ".tiff", "text/plain");
    }
}

//--------* Myanmar *--------//
function MYA_onDownload_JSON(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "MYA_" + data.pop_select + ".geojson", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "MYA_" + data.mpi_select + ".geojson", "text/plain");
    }

}

function MYA_onDownload_TIFF(select, data) {
    if (select == 'POP') {
        download(JSON.stringify(data.map_export), "MYA_" + data.pop_select + ".tiff", "text/plain");
    }
    if (select == 'MPI') {
        download(JSON.stringify(data.map_export), "MYA_" + data.mpi_select + ".tiff", "text/plain");
    }
}

//---------------------------------------------------------------------------------------// 
//---------------------------------- Download Map ---------------------------------------//
//---------------------------------------------------------------------------------------//
// ---------------- Global Map dawnload function ---------------- //
function simulateDownloadImageClick(uri, filename) {
    var link = document.createElement('a');
    if (typeof link.download !== 'string') {
        window.open(uri);
    } else {
        link.href = uri;
        link.download = filename;
        accountForFirefox(clickLink, link);
    }
}

function clickLink(link) {
    link.click();
}

function accountForFirefox(click) { // wrapper function
    let link = arguments[1];
    document.body.appendChild(link);
    click(link);
    document.body.removeChild(link);
}

// --------------------------------------------------* Cambodia *-------------------------------------------------------------//

function KHMdownloadChartasJPEG(input) {
    if (input == 'POP') {
        document.getElementById("khm_pop_download_jpg").addEventListener("click", function () {
            html2canvas(document.getElementById("khm_populaion_map_container"), { allowTaint: true, useCORS: true }).then(function (canvas) {
                //console.log(canvas);
                simulateDownloadImageClick(canvas.toDataURL(), 'KHM_' + khm_pop_sel + '.jpg');
            });
        });
    }
    if (input == 'MPI') {
        document.getElementById("khm_mpi_download_jpg").addEventListener("click", function () {
            html2canvas(document.getElementById("khm_mpi_map_container"), { allowTaint: true, useCORS: true }).then(function (canvas) {
                //console.log(canvas);
                simulateDownloadImageClick(canvas.toDataURL(), 'KHM_' + khm_mpi_sel + '.jpg');
            });
        });
    }
    
}

// --------------------------------------------------* Laos *-------------------------------------------------------------//
function LAOdownloadChartasJPEG(input) {
    if (input == 'POP') {
        document.getElementById("lao_pop_download_jpg").addEventListener("click", function () {
            html2canvas(document.getElementById("lao_populaion_map_container"), { allowTaint: true, useCORS: true }).then(function (canvas) {
                //console.log(canvas);
                simulateDownloadImageClick(canvas.toDataURL(), 'LAO_' + lao_pop_sel + '.jpg');
            });
        });
    }
    if (input == 'MPI') {
        document.getElementById("lao_mpi_download_jpg").addEventListener("click", function () {
            html2canvas(document.getElementById("lao_mpi_map_container"), { allowTaint: true, useCORS: true }).then(function (canvas) {
                //console.log(canvas);
                simulateDownloadImageClick(canvas.toDataURL(), 'LAO_' + lao_mpi_sel + '.jpg');
            });
        });
    }
    
}

